#!/usr/bin/python3
import time
import argparse

def translte_to_cyrillic(text):
    punycode_table = {
        'A': 'A', 'B': 'B', 'C': 'C', 'D': 'D', 'E': 'E', 'F': 'F', 'G': 'G', 'H': 'H', 'I': 'І', 'J': 'Ј', 'K': 'К', 'L': 'L', 'M': 'М', 'N': 'N', 'O': 'О', 'P': 'Р', 'Q': 'Ԛ', 'R': 'R', 'S': 'Ѕ', 'T': 'T', 'U': 'U', 'V': 'V', 'W': 'W', 'X': 'Х', 'Y': 'Y', 'Z': 'Z',
        'a': 'а', 'b': 'b', 'c': 'с', 'd': 'd', 'e': 'е', 'f': 'f', 'g': 'g', 'h': 'h', 'i': 'і', 'j': 'ј', 'k': 'k', 'l': 'l', 'm': 'm', 'n': 'n', 'o': 'о', 'p': 'р', 'q': 'ԛ', 'r': 'r', 's': 'ѕ', 't': 't', 'u': 'u', 'v': 'v', 'w': 'w', 'x': 'х', 'y': 'у', 'z': 'z'
    }
    result = ''
    for char in text:
        if char.lower() in punycode_table:
            if char.isupper():
                result += punycode_table[char.lower()].upper()
            else:
                result += punycode_table[char.lower()]
        else:
            result += char
    return result

green_color = "\033[1;32m"
end_color = "\033[0m"

banner = r'''{}
  ______ _______ ______                                  _
 / _____|_______|_____ \                                | |
( (____  _____   _____) )   _ ____  _   _  ____ ___   __| |_____  ____
 \____ \|  ___) |  ____/ | | |  _ \| | | |/ ___) _ \ / _  | ___ |/ ___)
 _____) ) |_____| |    | |_| | | | | |_| ( (__| |_| ( (_| | ____| |
(______/|_______)_|    |____/|_| |_|\__  |\____)___/ \____|_____)_|
                                   (____/                              Social Engineering Punycoder
                                                                        by @hackermater
{}'''.format(green_color, end_color)
lines = banner.split('\n')
for line in lines:
    print(line)
    time.sleep(0.08)

parser = argparse.ArgumentParser(description="Translate text to Cyrillic punycode.")
parser.add_argument('--file', type=str, help="Input file containing the text to translate")
parser.add_argument('--output', type=str, help="Output file to save the translated text")
args = parser.parse_args()

if args.file:
    with open(args.file, 'r') as file:
        user_input = file.read()
    output_text = translte_to_cyrillic(user_input)
else:
    user_input = input("🔓 Enter the text to translate to Cyrillic: ")
    user_input_https = input("🔗 Do you want to add \"https://\" protocol? (y/n): ")
    output_text = translte_to_cyrillic(user_input)
    if user_input_https == "y":
        output_text = "https://" + output_text

if args.output:
    with open(args.output, 'w') as file:
        file.write(output_text)
    print(f"👀 Translated text saved to {args.output}")
else:
    print("👀 Translated text:", output_text)
